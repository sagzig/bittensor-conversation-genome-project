name: Tests

on: [push, workflow_dispatch]

defaults:
  run:
    shell: bash -el {0}

jobs:
  unittest-job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        architecture: ['x64']
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-
            ${{ runner.os }}-pip-

      - name: Set up venv
        run: python -m venv venv

      - name: Install dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Run Tests
        run: |
          source venv/bin/activate
          pytest tests/
        env:
          SYSTEM_MODE: production
          WAND_ENABLED: 1
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
          WANDB_STAGENET_PROJECT: cgp_stagenet
          WANDB_TESTNET_PROJECT: cgp_testnet
          WANDB_MAINNET_PROJECT: cgp_mainnet
          CGP_API_READ_HOST: https://api.conversations.xyz
          CGP_API_WRITE_HOST: https://db.conversations.xyz
          CGP_API_READ_PORT: 443
          CGP_API_WRITE_PORT: 443
          LLM_TYPE: openai
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_DIRECT_CALL: 1
          OPENAI_MODEL: gpt-3.5-turbo
          OPENAI_EMBEDDINGS_MODEL: text-embedding-ada-002
